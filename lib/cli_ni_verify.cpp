#include <string>
#include <iostream>
#include "cryptopp/integer.h"
#include "cryptopp/modarith.h"
#include "proofs.hpp"

// make cli_ni && ./cli_ni_verify 44.0 21.0 38000.0 31667868684477756166995050973522626577188416581029305660910897066996395689332.124330456037378697296342056208881906221350328625680467464387180727698474310317803520796.124329820621593543250164565453184122489848057340101769111369094550548825027638297074216.124330809039110923169890049702715108078068784544960096198057382901468080119140552504600.124330809102446660538845562036705210025114037699336929360115994223289874253133343883264.124330220586775028204224954600677918080621727229803187511499591855178781192115853337376.124330804542273569974048673989417869837855810584204941691895979052120696605652364619456.124330808659096498956156975698774496395797265618699097225705714970537315315183804232616.124330809007443054485412293535720057104546157967771679617028077240557183052144156815268.124330809102446660538845562036705210025114037699336929360115994223289874253133343883264.124330809102446660538845562036705210025114037699336929360115994223289874253133343883264.17191.18754.13359.1443999998.
int main(int argc, char **argv) {

  if(argc != 5) {
       std::cerr << "Wrong argument to cli_ni_verify. Expected args: xl yl d proof (coordinates are in decimal degrees)" << std::endl;
       return 1;
  }
    double xl = std::stod(argv[1]),
          yl = std::stod(argv[2]),
          zl = 2.0,
          d = std::stod(argv[3]);

  std::string proof = argv[4];
  bool ok;

  std::cout << "xl: " << xl << std::endl;
  std::cout << "yl: " << yl << std::endl;
  std::cout << "d: " << d << std::endl;
  std::cout << "proof_string_value: " << proof << std::endl;

  ok = ni_proof_verify(proof, xl, yl, zl, d);

  std::cout << "verification_result_int: " << ok << std::endl;
  std::cout << "verification_result_bool: " << (ok == 1 ?  "true" : "false")<< std::endl << std::flush;

  return 0;
}